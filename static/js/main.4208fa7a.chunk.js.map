{"version":3,"sources":["components/header/header.jsx","components/footer/footer.jsx","components/region/region.jsx","const.js","data/region-data.js","components/map/map.jsx","components/popup/popup.jsx","components/button/button.jsx","components/game-rules/game-rules.jsx","components/final-message/final-message.jsx","components/question/question.jsx","components/score/score.jsx","components/info/info.jsx","components/tooltip/tooltip.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","width","height","Footer","href","Region","props","children","id","onRegionClick","status","getMyStatus","onClick","evt","pageX","pageY","GameStatus","RegionStatus","regionData","title","outlines","type","d","name","regionIds","map","item","Map","handleRegionClick","getRegionStatus","viewBox","outline","Popup","Button","GameRules","onStartButtonClick","Fragment","getReview","score","FinalMessage","onRestartButtonClick","idToName","forEach","createIdToNameMap","Question","playingRegionId","Score","value","Info","isGameFinished","Tooltip","message","coordX","coordY","style","left","top","SUCCESS_MESSAGE","PersentageForRightAnswer","regionsInGame","failedTryCount","initialRegionsStatus","idToStatus","createIdToStatusMap","getRandomRegion","maxIndex","length","randomIndex","Math","floor","random","App","useState","gameStatus","setGameStatus","regionsStatus","setRegionsStatus","playingRegion","setPlayingRegion","setMessage","setScore","useEffect","setTimeout","finishGame","showMessage","text","x","y","regionId","playingRegionStatus","currentScore","region","filter","regionInGame","excludeRegionFromGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4208fa7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__inner\">\r\n        <div className=\"header__logo\">\r\n          <img src=\"img/sign.png\" alt=\"Герб Смоленской области\" width=\"42\" height=\"51\"/>\r\n        </div>\r\n        <h1 className=\"header__title\">Как хорошо Вы знаете Смоленскую область?\r\n        </h1>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">Created by Alex Alexandrov</p>\r\n      <p>2019 год</p>\r\n      <p className=\"footer__text\">По мотивам <a className=\"footer__link\" href=\"https://motovskikh.ru/tests/\">проекта братьев Мотовских</a></p>\r\n    </footer>\r\n  ); \r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './region.css';\r\n\r\nconst Region = (props) => {\r\n  const {children, id, onRegionClick, getMyStatus} = props;\r\n  const status = getMyStatus(id);\r\n  const onClick = (evt) => {\r\n    onRegionClick(id, evt.pageX, evt.pageY);\r\n  };\r\n\r\n  return (\r\n    <g \r\n      className={`region region--${status}`} \r\n      id={id}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </g>\r\n  ); \r\n};\r\n\r\nRegion.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  id: PropTypes.string,\r\n  onRegionClick: PropTypes.func,\r\n  getMyStatus: PropTypes.func,\r\n};\r\n\r\nexport default Region;\r\n","export const GameStatus = {\r\n  UNSTARTED: `unstarted`,\r\n  STARTED: `started`,\r\n  FINISHED: `finished`,\r\n};\r\n\r\nexport const RegionStatus = {\r\n  INITIAL: `initial`,\r\n  GUESSED_ON_FIRST_TRY: `on-first`,\r\n  GUESSED_ON_SECOND_TRY: `on-second`,\r\n  GUESSED_ON_THIRD_TRY: `on-third`,\r\n  FAILED: `failed`,\r\n  UNGUESSED: `unguessed`\r\n};\r\n","import {RegionStatus} from \"../const\";\r\n\r\nexport const regionData = {\r\n  title: \"Smolensk\",\r\n  outlines: [\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 13.430734,34.29788 h 5.035415 l 1.32511,2.65022 9.540787,-0.53004 1.855153,1.59013 4.240349,-1.85516 h 2.91524 l 3.710308,4.50538 -2.915243,4.50537 0.265023,2.65022 -6.360525,4.77039 -0.530042,4.7704 -4.505373,-2.91525 -3.710306,3.97533 -5.565459,-0.26502 -2.650218,-2.12017 -0.530044,5.30043 -3.445284,0.26502 -4.7703922,-2.38519 -0.5300427,-4.7704 2.6502165,-2.12017 -1.3251084,-2.91524 1.5901301,-2.91524 -2.3851955,-3.44529 2.9152392,-3.18026 3.180262,-2.3852 z\",\r\n      id: \"velizh\",\r\n      name: \"Велижский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 42.1101,40.6331 0.397527,-4.63788 2.517695,-1.85515 7.818098,0.79506 4.240326,6.62555 -3.312752,7.42061 2.517695,6.89057 h -2.120168 l -0.530037,4.50537 0.927574,0.92758 -4.770373,7.2881 0.927577,7.55312 -4.372836,-0.92758 -0.13251,3.04776 -8.215632,-1.06009 -1.192594,-2.91524 -8.613205,3.84281 -2.252686,2.65022 -0.265022,3.44529 -2.78273,-1.32511 -3.975328,-2.78273 1.855153,-2.91524 1.987665,1.45762 1.855153,-2.3852 -0.397533,-3.31277 2.385196,-0.53004 -3.047751,-3.04776 -1.192598,1.59013 -3.710307,-3.97532 0.795066,-5.43295 3.047752,0.39753 1.855153,-3.57779 3.710305,-3.97533 4.505373,2.91524 0.530042,-4.77039 6.360507,-4.7704 -0.26502,-2.65022 z\",\r\n      id: \"demidov\",\r\n      name: \"Демидовский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 7.3138098,59.48017 -3.7102819,5.30044 v 2.12017 l 5.9629554,7.95066 1.0600837,6.75806 0.530037,2.5177 -4.6378509,-0.53004 v 1.72264 l 1.9876468,2.51771 -5.035383,2.3852 -3.31277114,8.21568 5.83047064,4.24035 6.6255016,0.26502 0.662554,-0.79507 5.962957,2.91524 7.818095,-2.25268 1.855151,1.45762 4.637853,-5.69797 -1.457611,-1.72264 -2.252678,0.66255 -1.722631,-5.30044 -2.650205,0.26502 -1.192591,-1.45762 -1.987651,-4.37286 3.312752,-2.12017 -6.758011,-4.10784 1.855138,-2.91524 1.987651,1.45762 1.855148,-2.3852 -0.397537,-3.31277 2.385185,-0.53005 -3.047732,-3.04775 -1.192594,1.59013 -3.710289,-3.97532 0.795067,-5.43295 3.047732,0.39753 1.855141,-3.57779 -5.56543,-0.26503 -2.650195,-2.12017 -0.530047,5.30044 -3.445259,0.26502 z\",\r\n      id: \"rudnya\",\r\n      name: \"Руднянский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 56.958616,41.59427 1.590121,-2.38519 2.848962,2.38519 5.167903,-2.91524 2.517695,2.71648 2.252668,-3.77656 2.053908,3.77656 6.890531,0.33128 -4.240326,7.22184 v 1.7889 l -1.192594,1.39136 -0.19876,4.43912 2.252668,1.32511 0.19877,1.39136 -3.246502,6.95683 2.981482,9.01074 -4.96913,0.19877 0.331267,4.43911 -0.861314,0.99383 -1.325104,-0.39753 -0.463777,1.65639 -3.113992,0.86132 -1.855151,-0.19877 -6.360484,2.51771 -0.861314,-1.1926 -3.909049,-0.99383 -0.397537,-2.65022 -2.252677,-1.12634 0.728808,-2.05392 -0.927576,-1.12634 -0.927577,-7.55313 4.770386,-7.2881 -0.927577,-0.92757 0.530047,-4.50538 h 2.120158 l -2.517695,-6.89056 z\",\r\n      id: \"duhovshchina\",\r\n      name: \"Духовщинский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 45.738755,115.65544 1.987661,0.86132 0.795054,2.12018 4.902883,1.78889 1.523861,-2.91524 6.029217,1.1926 1.656378,-2.38519 -1.325101,-2.12018 3.113982,-4.04158 -1.391351,-3.18027 v -4.63788 l -3.975309,-2.25268 -0.861314,-5.10168 2.517695,0.13252 -2.981482,-5.83048 -0.728807,-2.31895 1.391361,-1.52387 -0.861314,-1.1926 -3.909059,-0.99383 -0.397527,-2.65022 -2.252668,-1.12635 0.728797,-2.05391 -0.927564,-1.12635 -4.372836,-0.92757 -0.13251,3.04775 -8.215632,-1.06009 -1.192594,-2.91524 -8.613162,3.84282 -2.252675,2.65022 -0.26502,3.44528 -3.312752,2.12018 1.987651,4.37285 1.192591,1.45763 2.650205,-0.26503 1.722631,5.30044 2.252678,-0.66255 1.457611,1.72264 -4.637863,5.69797 -1.590111,2.38519 -0.530047,2.3852 2.252678,1.06009 8.348132,-4.63788 3.047742,3.31277 -1.192594,1.06009 0.39753,2.25268 4.372833,2.12018 z\",\r\n      id: \"smolensk\",\r\n      name: \"Смоленский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 6.1180354,102.53686 2.6502175,5.83048 2.5177061,1.45762 5.300438,-0.26502 0.795065,2.51771 -4.107839,7.55312 4.505372,3.44528 2.517708,6.49304 1.987664,1.32511 -1.45762,2.51771 3.312773,0.13251 1.722642,-2.51771 4.902906,-1.1926 3.04775,-4.63788 3.710305,-0.13251 0.265023,-3.31277 7.950655,-6.09551 -1.59013,-1.59013 -4.372862,-2.12017 -0.397533,-2.25269 1.192598,-1.06009 -3.047751,-3.31277 -8.348188,4.63788 -2.252686,-1.06009 0.530045,-2.38519 1.59013,-2.3852 -1.855153,-1.45762 -7.818145,2.25269 -5.962992,-2.91524 -0.662554,0.79506 z\",\r\n      id: \"krasniy\",\r\n      name: \"Краснинский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 53.591014,120.26093 0.728807,6.42677 0.463787,8.21568 -3.113992,-0.13251 -5.1679,8.14942 -1.722631,-0.53004 -0.861317,2.45145 -1.523871,-0.26502 -2.186418,3.57779 -4.174066,-0.0662 -0.331277,-2.12017 -6.691761,-1.39137 -1.855141,-3.84282 -2.385192,0.0663 0.198767,-2.18643 -3.246518,-0.19877 0.596299,-4.04158 -1.325109,-1.12634 3.312773,0.13251 1.722636,-2.51771 4.902883,-1.1926 3.047732,-4.63788 3.710279,-0.13251 0.26503,-3.31277 7.950605,-6.09551 1.987658,0.86132 0.795054,2.12018 z\",\r\n      id: \"monastyrshchina\",\r\n      name: \"Монастырщинский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 40.197552,147.92771 2.186415,-3.57779 1.523874,0.26502 0.861314,-2.45146 1.722631,0.53005 5.1679,-8.14942 3.113992,0.13251 2.186418,-0.19877 2.252668,1.59013 1.325101,-0.92758 h 2.318928 l 1.391361,-1.25885 0.927564,0.26502 0.795067,1.25886 h 1.788888 l 0.662547,6.89056 1.258854,2.25269 v 2.58396 l -1.325104,0.33128 -1.921398,1.39137 1.060074,2.12017 -0.993824,3.37903 -0.993824,-0.13251 -2.385178,-0.99383 -0.728814,-1.52388 -1.987651,-0.0663 0.26502,2.25268 -1.987648,2.12018 -3.047735,-0.26502 -5.896707,4.43911 -3.975306,-1.25885 -0.795057,1.1926 -1.457611,-0.72881 1.126334,-2.18644 v -6.95682 l 0.0662,-1.06009 H 42.18516 l -0.795067,0.72881 h -1.855138 z\",\r\n      id: \"hislavichi\",\r\n      name: \"Хиславичский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 53.592674,120.29743 1.192594,14.64246 2.186418,-0.19877 2.252678,1.59013 1.325101,-0.92757 h 2.318928 l 1.391351,-1.25886 0.927574,0.26503 0.795057,1.25885 h 1.788888 l 0.662547,6.89057 1.258854,2.25268 v 2.58397 l 2.385175,1.85515 1.921401,0.5963 1.126344,1.1926 1.855138,0.19876 0.13251,-1.65638 1.788888,-0.99383 0.0663,-1.25886 3.113982,-0.19877 1.590131,-1.3251 -0.331277,-1.98767 0.993824,-1.12634 4.107816,1.39136 1.590121,-1.52387 v -2.12018 l 1.921401,-0.13251 1.523861,-2.84898 -0.861317,-1.52388 0.795067,-3.18026 -3.909049,-0.33128 -1.391361,-1.06009 h -2.451435 l -1.325104,-1.52387 -0.331277,-3.77656 -3.246492,-1.98767 -2.385188,-3.11401 h -1.126341 l -0.0662,-1.39136 1.192591,-0.66255 -0.795064,-1.06009 -2.915225,-0.19877 -0.530037,1.25886 -1.391361,-0.33128 0.13252,-1.32511 -1.391364,-1.32511 0.46379,-2.45145 -1.656381,-2.12018 -3.511522,-1.52387 -2.186418,0.19876 -3.113982,4.04159 1.325094,2.12017 -1.656371,2.3852 -6.029217,-1.1926 z\",\r\n      id: \"pochinok\",\r\n      name: \"Починковский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 43.704571,159.29263 1.457611,0.72881 0.795067,-1.1926 3.975296,1.25885 5.896707,-4.43911 3.047732,0.26502 1.987658,-2.12018 -0.265017,-2.25268 1.987648,0.0662 0.728807,1.52388 3.379009,1.12634 0.993827,-3.37903 -1.060084,-2.12017 3.246499,-1.72265 2.385188,1.85516 1.921398,0.5963 1.126334,1.19259 -1.457611,2.84899 -0.397527,3.71031 0.993824,1.06008 -0.26502,4.37286 1.788881,1.12635 -0.397527,1.39136 -1.391354,0.99383 -0.265027,1.1926 2.451445,0.92758 -0.331277,0.86132 -1.590121,2.58396 -2.517695,0.66256 -2.120168,2.98149 -1.987651,-1.32511 -1.855138,-0.0662 -0.795067,0.79506 h -1.457611 l -1.126334,-2.05391 -1.987648,-1.52388 -2.120168,-0.26502 -0.927564,-1.72265 -1.656381,-0.13251 -1.855151,-1.39136 -8.215622,2.25269 -0.463787,1.06008 -0.927574,-0.99383 h -1.060084 l -1.722631,-1.92141 -1.987648,-0.0662 2.186415,-2.91524 0.13251,-1.72265 -0.596297,-1.06008 1.921401,-1.06009 z\",\r\n      id: \"shumyachi\",\r\n      name: \"Шумячский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 69.724404,175.41872 2.120168,-2.98149 2.517695,-0.66256 1.590121,-2.58396 1.590121,1.12634 3.842799,-1.1926 1.325101,2.25269 4.902873,0.0662 0.861314,1.06009 1.788891,0.5963 3.975306,2.78273 -3.113992,3.37903 0.13251,1.39136 -1.126334,0.79507 h -2.385185 l -1.523861,4.3066 0.265017,2.51771 -1.060084,0.46379 0.596297,0.99383 -0.861314,0.66256 -0.596297,2.51771 -1.391364,1.06008 -1.921398,-0.26502 -0.530037,2.18643 -1.523861,-0.0663 -0.19877,-2.65021 -3.246502,-0.66256 0.13251,-0.99383 -1.060074,-1.52388 -1.391361,1.59014 -0.728807,-2.84899 -2.318928,-0.5963 -3.776536,-4.24035 -0.33128,-3.7103 -0.662557,-0.5963 v -1.52388 l 2.583958,0.46379 1.656368,-0.79507 z\",\r\n      id: \"ershichi\",\r\n      name: \"Ершичский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 93.441239,137.25904 1.391361,0.66256 0.596297,-0.99383 0.13251,-3.90908 0.993824,-0.72881 3.246502,0.46379 1.258847,-1.06009 1.72264,0.39754 2.31894,2.71647 3.11401,0.53004 c 0,0 0.46379,-3.37902 0.72881,-3.37902 0.26502,0 4.90291,-2.05392 4.90291,-2.05392 l 3.97533,4.63788 -0.19877,2.3852 -3.11401,1.98766 0.0662,2.91524 0.99383,2.31894 -2.31894,-0.33127 -0.46378,0.92757 v 3.04775 l -1.7889,1.59014 -0.0663,0.99383 -2.58397,0.53004 -0.33127,1.45762 1.92141,0.13251 0.92757,3.31277 -2.31894,0.13252 -0.92757,1.06008 0.0662,1.59013 -2.05392,2.51771 -1.7889,-0.0663 -1.32511,-1.1926 -1.65639,0.26502 c 0,0 0.13251,1.72264 0.19877,2.05392 0.0663,0.33128 0.72881,1.06009 0.72881,1.06009 l -1.65639,1.85515 0.13251,2.12017 1.59014,0.46379 v 1.85516 l -3.975315,0.0662 -0.0662,2.05392 0.728804,0.99383 c 0,0 0.19876,1.65639 -0.0663,2.05392 -0.265017,0.39754 -1.457611,0.86132 -1.457611,0.86132 l -0.198767,1.52388 -2.716455,-1.06009 -3.975309,-2.78273 -1.788888,-0.5963 -0.861317,-1.06008 -4.902873,-0.0663 -1.325101,-2.25269 -3.842799,1.1926 -1.590121,-1.12634 0.33128,-0.86132 -2.451448,-0.92758 0.26503,-1.1926 1.391351,-0.99383 0.397527,-1.39136 -1.788878,-1.12635 0.265017,-4.37286 -0.993824,-1.06009 0.397527,-3.7103 1.457614,-2.84899 1.855138,0.19877 0.13251,-1.65638 1.788888,-0.99384 0.0663,-1.25885 3.113982,-0.19877 1.590121,-1.32511 -0.331267,-1.98766 0.993824,-1.12634 4.107816,1.39136 1.590121,-1.52388 v -2.12017 l 1.921401,-0.13251 z\",\r\n      id: \"roslavl\",\r\n      name: \"Рославльский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 118.86499,119.29774 -0.13251,-3.44528 2.84898,-1.7889 -0.46378,-1.98767 -2.18644,0.39754 -3.114,-1.59013 -1.92141,-0.5963 -1.7889,1.52387 -3.114,-0.39753 0.13251,-1.92141 -10.070824,-3.90907 -3.511519,0.86132 -0.993834,0.53005 0.331277,2.12017 -2.517695,1.72264 -0.795057,1.7889 -1.590121,0.92758 0.13251,3.04775 -0.993824,1.9214 1.855141,2.25269 0.132507,2.71647 H 89.58013 l -0.13251,-2.31894 -0.596294,-0.33127 -2.583948,2.45145 -1.126331,2.71647 h -1.391364 l 0.33128,3.77657 1.325101,1.52387 h 2.451435 l 1.391364,1.06009 3.909046,0.33128 -0.795064,3.18026 0.861314,1.52388 1.391364,0.66255 0.596297,-0.99383 0.132507,-3.90908 0.993824,-0.72881 3.246502,0.46379 1.258847,-1.06009 1.72265,0.39754 2.31894,2.71647 3.114,0.53005 0.66256,-3.44529 4.96916,-1.98766 2.05392,-0.99383 -0.0662,-1.85516 2.5177,-2.31894 -0.19876,-0.72881 h -2.05392 l 0.13251,-1.1926 2.12017,-1.45762 z\",\r\n      id: \"elnya\",\r\n      name: \"Ельнинский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 71.869682,113.40763 -1.656371,-2.12017 4.704103,-4.1741 -2.716455,-1.39136 8.546902,-6.62555 v -1.52388 l 1.258854,-0.0662 2.120155,-0.33128 1.590121,3.71031 2.120168,-1.39137 4.107819,5.69797 3.842786,-0.53004 -0.0662,1.7889 -0.993827,0.53004 0.33128,2.12018 -2.517695,1.72264 -0.795067,1.7889 -1.590121,0.92757 0.13251,3.04775 -0.993824,1.92141 1.855138,2.25269 0.13252,2.71647 h -1.523871 l -0.13251,-2.31894 -0.596297,-0.33128 -2.583945,2.45145 -1.126344,2.71648 H 83.92816 l -3.246502,-1.98766 -2.385175,-3.11401 h -1.126344 l -0.0663,-1.39137 1.192594,-0.66255 -0.795057,-1.06009 -2.915232,-0.19877 -0.530037,1.25886 -1.391354,-0.33128 0.13251,-1.32511 -1.391361,-1.32511 z\",\r\n      id: \"glinka\",\r\n      name: \"Глинковский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 64.42275,110.15627 2.186418,-0.19877 3.511519,1.52388 4.704113,-4.17409 -2.716455,-1.39137 8.546902,-6.62554 v -1.52388 l 1.258854,-0.0663 1.590121,-2.58396 1.060084,-1.1926 -0.463787,-0.92757 -3.644029,0.26502 0.0662,-2.91524 -4.571603,1.9214 -3.379012,0.19877 0.26502,-2.18643 -1.590121,-1.32511 -1.590121,-3.77656 -1.656381,0.26502 -1.391351,-2.31894 -1.855151,-0.19877 -6.360484,2.51771 -1.391351,1.52388 3.710279,8.14942 -2.517695,-0.13251 0.861324,5.10167 3.975296,2.25269 v 4.63788 z\",\r\n      id: \"kardymovo\",\r\n      name: \"Кардымовский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 89.156873,87.85174 -1.656381,1.7889 v 1.92141 l -0.927564,1.98766 1.060074,2.45145 -3.312752,0.19877 -1.258841,-1.06009 1.060074,-1.1926 -0.46378,-0.92758 -3.644029,0.26503 0.0662,-2.91524 -4.571603,1.9214 -3.379012,0.19877 0.26502,-2.18643 -1.590121,-1.32511 -1.590121,-3.77656 -1.656381,0.26502 -1.391354,-2.31894 3.113985,-0.86132 0.463787,-1.65639 1.325101,0.39754 0.861317,-0.99384 -0.33128,-4.43911 4.969143,-0.19877 -2.981485,-9.01074 3.246502,-6.95683 -0.198767,-1.39136 -2.252668,-1.32511 0.19876,-4.43912 1.192591,-1.39136 v -1.7889 l 1.126334,0.19877 1.457611,2.71647 3.842799,2.25269 1.921401,0.0663 0.265017,-0.53004 1.126334,0.33128 0.19877,3.7103 1.192591,0.19877 0.861317,-2.51771 0.927574,0.53005 0.331267,5.69796 -0.265017,1.98767 1.523871,4.10784 -1.987658,0.92758 -0.13251,0.99383 0.795064,0.99383 0.19876,1.7889 0.331277,3.77656 -1.590121,1.45762 -0.0663,1.45762 1.391364,1.72264 z\",\r\n      id: \"yartsevo\",\r\n      name: \"Ярцевский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 80.193462,41.82437 -4.24035,7.22184 1.126341,0.19877 1.457622,2.71647 3.842816,2.25269 1.92141,0.0662 0.265019,-0.53004 1.126345,0.33128 0.198765,3.7103 1.192599,0.19877 0.861322,-2.51771 0.927576,0.53005 0.331277,5.69796 1.788898,-1.06008 8.348184,2.38519 1.391374,-1.25885 5.63171,2.3852 0.99383,-1.1926 4.30661,1.45762 -0.19877,-1.92141 2.71647,0.13251 1.12635,-1.65638 2.38519,0.0662 0.39754,-0.66255 1.45762,0.72881 1.1926,2.65021 1.78889,-0.26502 0.19877,-3.114 -0.33128,-1.45762 1.1926,-1.25886 -0.72881,-0.86132 1.06009,-1.7889 0.72881,0.19877 0.13251,-3.04775 h -1.1926 l -3.51154,-2.84899 0.39753,-1.72264 -4.83665,0.5963 -1.72264,-1.72264 -0.19877,-3.18026 h -1.9214 l -0.92758,-1.72265 -2.51771,0.46379 0.46379,-1.85515 -1.45762,-0.26502 0.26502,-3.11401 -2.91524,0.99383 0.66256,1.52388 -2.65022,-0.53004 -1.52388,2.65021 -1.590127,-1.12634 -1.457621,-0.0663 -1.987668,2.3852 -1.656381,2.51771 -1.590131,-0.79507 -0.33128,-1.72264 -2.650217,1.52388 -0.795065,-1.06009 -3.047754,-0.19877 -0.861319,0.5963 -1.722644,-0.26502 -0.993831,-1.59013 z\",\r\n      id: \"holm-zhirki\",\r\n      name: \"Холм-Жирковский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 89.081916,87.73887 0.06625,-6.89056 -1.391365,-1.72265 0.06626,-1.45762 1.59013,-1.45762 -0.530042,-5.56546 -0.795068,-0.99383 0.132511,-0.99383 1.987664,-0.92758 -1.523875,-4.10783 0.265022,-1.98767 1.788898,-1.06009 8.348185,2.3852 1.391364,-1.25885 3.84284,1.59013 1.78891,0.79506 0.99384,-1.1926 4.30661,1.45762 -0.19877,-1.9214 2.71648,0.13251 1.12634,-1.65639 2.38519,0.0663 0.39754,-0.66256 1.45762,0.72881 1.1926,2.65022 1.78889,-0.26502 4.30661,0.39753 1.06009,0.99383 -2.12018,1.32511 -0.53004,3.71031 1.32511,2.91524 -0.92758,0.99383 0.92758,1.52388 -0.5963,3.114 -1.65639,-0.99383 -1.85515,3.77656 1.92141,2.71648 -0.46379,1.32511 -3.44528,-0.33128 -0.13252,5.30044 -2.38519,0.72881 -2.91524,0.26502 -0.39754,-1.7889 -5.4992,-1.32511 1.45762,-1.65638 -3.11401,-0.53005 -1.06009,0.92758 -0.86133,0.46379 -3.4453,-1.85516 -1.59014,0.26503 -2.583965,-0.72882 -1.656391,1.1926 -3.047742,0.39753 -1.590137,1.85516 z\",\r\n      id: \"safonovo\",\r\n      name: \"Сафоновский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 83.293203,95.17586 1.258853,1.06009 3.312774,-0.19877 -1.060087,-2.45145 0.927576,-1.98767 v -1.92141 l 1.656387,-1.78889 2.318941,0.66255 1.590133,-1.85515 3.047751,-0.39753 1.656391,-1.1926 2.583958,0.72881 1.59014,-0.26502 3.44531,1.85515 0.86132,-0.46379 1.06009,-0.92758 3.11401,0.53005 -1.45763,1.65638 5.49921,1.32511 0.39753,1.7889 2.91524,-0.26502 1.25885,1.98766 1.25886,4.30661 0.0662,3.31277 1.72264,3.77656 -1.78889,0.79507 -2.25269,-0.26502 -2.58396,6.16176 -1.92141,-0.5963 -1.7889,1.52387 -3.11401,-0.39753 0.13251,-1.92141 -10.070861,-3.90907 -3.511542,0.86132 0.0662,-1.7889 -3.842812,0.53005 -4.10784,-5.69797 -2.120175,1.39136 -1.590132,-3.71031 -2.120175,0.33128 z\",\r\n      id: \"dorogobuzh\",\r\n      name: \"Дорогобужский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 115.57111,110.87071 2.58397,-6.16176 2.25268,0.26502 1.7889,-0.79507 -1.72264,-3.77656 -0.0663,-3.31277 2.25269,-1.7889 0.66255,1.65639 2.05392,-1.7889 2.9815,0.39754 2.51771,1.9214 v 0.72881 l 7.55312,0.39754 1.65639,1.25885 0.59629,-1.65639 1.59014,-0.0662 0.5963,-3.64405 -1.85516,-0.39754 -0.19876,-2.71647 2.05392,-1.59013 1.85515,-0.26502 1.1926,-3.04775 1.45762,-0.39754 2.25268,1.32511 2.18643,-0.99383 1.06009,-1.72264 2.65022,0.33127 2.12018,0.86133 0.0662,3.31277 -0.72881,1.59013 h 7.02308 v 1.45762 l 2.65021,-0.72881 0.13252,3.31278 -1.45763,0.92757 0.19877,4.77039 0.92758,1.98767 0.0662,1.7889 -2.58396,3.04775 -0.19877,1.39136 -1.25885,-1.12634 -2.12018,0.33128 -2.05392,1.59013 -3.114,1.25885 -2.84899,-1.06009 -1.85515,-0.0662 -1.7889,-0.99383 -0.13251,1.39136 2.31894,1.72264 0.0663,3.44529 -2.3852,1.7889 -0.26502,3.18026 -0.72881,1.59013 -1.1926,0.0662 -1.1926,-0.79506 -2.18643,0.5963 -1.92141,-1.1926 -1.1926,1.72264 -3.24651,-1.52387 -0.39754,-1.7889 -1.32511,-0.79507 -1.45761,0.72881 -0.92758,-0.66255 -2.51771,-0.0663 -1.1926,-0.99383 -2.12017,-0.13251 -0.72881,1.12634 -2.18643,-0.13251 -0.79507,0.46379 -1.59013,0.0662 -0.26502,-0.79506 -2.51771,1.59013 -0.13251,-3.44528 2.84898,-1.7889 -0.46378,-1.98767 -2.18644,0.39754 z\",\r\n      id: \"ugra\",\r\n      name: \"Угранский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 163.55314,66.20584 0.92758,-2.12018 1.39136,-0.46378 -0.72881,-1.98767 0.13251,-1.92141 -1.65638,-2.51771 -4.24035,0.86133 -0.86132,1.45761 -4.04159,-2.45145 -0.99383,0.53005 -0.26502,1.72264 h -1.39136 l -1.06009,-2.71648 1.32511,-2.58396 -2.12018,-2.05392 -3.84282,0.79507 -0.39753,5.83048 -3.24652,1.25885 -1.12634,-0.79506 h -1.39136 l -0.5963,0.99383 -0.33128,1.06009 -1.72264,-0.13251 -1.32511,-2.31894 -2.78273,-0.66256 -1.25885,0.66256 -1.45763,-1.06009 -2.5177,0.53004 -0.0663,1.32511 -3.51154,-0.0662 -1.92141,0.92757 -0.19877,3.11401 4.30661,0.39753 1.06009,0.99383 -2.12018,1.32511 -0.53004,3.71031 1.32511,2.91524 -0.92758,0.99383 0.92758,1.52388 -0.5963,3.114 -1.65639,-0.99383 -1.85515,3.77656 1.92141,2.71648 -0.46379,1.32511 -3.44528,-0.33128 -0.13252,5.30043 -2.38519,0.72882 1.25885,1.98766 1.25886,4.30661 2.25268,-1.7889 0.66256,1.65638 2.05391,-1.78889 0.72881,0.19876 2.25269,0.19877 2.51771,1.92141 v 0.72881 l 7.55312,0.39753 1.65639,1.25885 0.5963,-1.65638 1.59013,-0.0663 0.5963,-3.64405 -1.85516,-0.39753 -0.19876,-2.71648 2.05392,-1.59013 1.85515,-0.26502 1.1926,-3.04775 1.45762,-0.39753 2.25269,1.32511 2.18642,-0.99384 1.06009,-1.72264 -0.0662,-1.45762 0.92758,-1.85515 1.7889,0.72881 2.38519,-0.66255 -0.33128,-2.9815 0.79507,-2.3852 1.98767,-2.12017 -2.25269,-3.90907 0.26502,-1.12635 1.06009,-0.0662 -0.26502,-1.25885 -2.05392,-0.66256 c 0,0 0.72881,-1.39137 1.19259,-1.39137 0.46379,0 2.12018,0.99384 2.12018,0.99384 z\",\r\n      id: \"vyazma\",\r\n      name: \"Вяземский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 139.47991,61.17268 -1.72264,-0.13251 -1.32511,-2.31894 -2.78273,-0.66256 -1.25885,0.66256 -1.45762,-1.06009 -2.51771,0.53005 -0.0663,1.32511 -3.51154,-0.0663 -1.92141,0.92758 -0.33128,-1.45762 1.1926,-1.25886 -0.72881,-0.86132 1.06009,-1.7889 0.72881,0.19877 0.13251,-3.04775 h -1.1926 l -3.51154,-2.84899 0.39754,-1.72264 -4.83665,0.5963 -1.72264,-1.72264 -0.19877,-3.18026 h -1.92141 l -0.92757,-1.72265 -2.51771,0.46379 0.46379,-1.85515 -1.45762,-0.26502 0.26502,-3.11401 1.92141,-0.72881 0.99383,-1.92141 7.55312,-1.12634 1.92141,-1.1926 h 3.18026 l 3.71031,4.63788 0.26502,1.1926 1.92141,0.86132 0.92758,2.05392 3.90907,-0.13251 2.98149,1.65639 2.58397,-0.0663 3.04775,-1.65638 2.25269,0.19876 0.92757,-0.5963 3.90908,0.5963 -0.13252,-1.12634 1.85516,-1.98766 2.12017,-1.45763 0.99383,0.79507 0.86132,3.11401 2.51771,0.26502 1.12634,1.72264 -1.65638,3.84282 -1.85515,0.26502 -0.66256,1.06009 -0.13251,4.17409 -0.72881,0.5963 -0.46379,1.92141 -1.12634,0.33128 -2.12018,-2.05392 -3.84281,0.79506 -0.39754,5.83048 -3.24652,1.25886 -1.12634,-0.79507 h -1.39136 l -0.5963,0.99384 z\",\r\n      id: \"novodugino\",\r\n      name: \"Новодугинский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 110.6591,34.20365 7.55313,-1.12635 1.92141,-1.19259 h 3.18026 l 3.7103,4.63788 0.26502,1.1926 1.92141,0.86132 0.92758,2.05392 3.90907,-0.13252 2.9815,1.65639 2.58396,-0.0662 3.04775,-1.65639 2.25269,0.19877 0.92757,-0.5963 3.90908,0.5963 -0.13251,-1.12635 1.85515,-1.98766 -0.5963,-0.86132 0.79506,-6.62555 -1.45761,-1.25885 0.53004,-4.70414 -1.39137,-1.1926 -1.72264,-0.33128 -0.13251,-1.78889 -2.84898,-1.32511 -0.0662,-0.66256 -2.45146,0.0663 -0.79506,0.99383 -3.77657,-2.84898 -1.9214,-0.79507 h -1.92142 l -1.45761,2.12017 -1.25886,-0.0663 -0.46379,-0.92758 h -2.58396 l -2.51771,-1.65638 -1.98766,0.13251 -0.33128,3.31277 -2.65022,-0.19877 0.99383,5.10168 -0.99383,1.06008 -1.65638,-1.92141 -4.37287,0.26503 -0.19876,0.92757 1.65639,1.7889 -1.1926,4.96916 -2.18643,-0.33128 -0.79507,1.52388 -1.12634,0.79506 z\",\r\n      id: \"sychevka\",\r\n      name: \"Сычёвский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 151.20784,37.78044 -0.59631,-0.86132 0.79508,-6.62554 -1.45763,-1.25886 0.53004,-4.70414 2.58398,-0.0663 0.0663,2.05392 2.12019,-0.39753 2.71648,-4.43912 1.72266,0.92758 0.79507,-0.79507 6.95686,0.0663 3.31279,-0.99384 1.59014,2.18644 2.18644,-0.0663 6.29431,11.26343 0.72882,0.0663 0.39753,3.11401 -0.99384,0.13251 0.26503,1.52388 1.1926,0.86132 -0.0662,2.45145 1.92142,2.58396 0.53005,2.58397 -0.79507,1.45762 -2.65024,-0.19877 -0.33128,0.92758 1.19261,2.12017 v 2.9815 l -1.32512,1.32511 1.72265,2.91524 -2.98151,6.55929 h -0.86133 l -2.38521,2.51771 -1.59014,-0.26502 -1.39137,1.52387 -4.43914,0.0663 -2.38521,-2.51771 -2.91526,-0.19877 0.92759,-2.12017 1.39137,-0.46379 -0.72882,-1.98766 0.13251,-1.92141 -1.65639,-2.51771 -4.24038,0.86132 -0.86132,1.45762 -4.04161,-2.45145 -0.99383,0.53004 -0.26503,1.72264 h -1.39137 l -1.0601,-2.71647 1.32512,-2.58396 1.12635,-0.33128 0.46379,-1.92141 0.72881,-0.5963 0.13252,-4.17409 0.66255,-1.06009 1.85517,-0.26502 1.65639,-3.84282 -1.12635,-1.72264 -2.51772,-0.26502 -0.86133,-3.11401 -0.99383,-0.79507 z\",\r\n      id: \"gagarin\",\r\n      name: \"Гагаринский\"\r\n    },\r\n    {\r\n      type: \"singlePath\",\r\n      d: \"m 179.3536,64.9275 h -0.86132 l -2.3852,2.51771 -1.59013,-0.26502 -1.39136,1.52387 -4.43912,0.0663 -2.3852,-2.51771 -2.91524,-0.19876 -3.31277,0.46378 -2.31894,-1.12634 -0.99383,1.52388 2.05392,0.66255 0.26502,1.25885 -1.06009,0.0663 -0.26502,1.12634 2.25269,3.90907 -1.98767,2.12018 -0.79507,2.3852 0.33128,2.98149 -2.38519,0.66256 -1.7889,-0.72881 -0.92758,1.85515 0.0663,1.45762 2.65022,0.33128 2.12017,0.86132 0.0662,3.31277 -0.72881,1.59013 h 7.02309 v 1.45762 l 2.65021,-0.72881 2.3852,3.24652 3.97533,-5.43295 1.65639,0.13251 0.26502,-1.52387 -0.92758,-1.98767 0.5963,-1.45761 1.52388,0.26502 3.37902,-2.71648 -0.0663,-1.85515 1.12635,-0.5963 2.65022,-7.48687 -1.06009,-0.99383 v -1.06009 l 1.39136,-0.33128 -0.99383,-1.3251 h -0.86132 l -0.53004,-1.92141 z\",\r\n      id: \"temkino\",\r\n      name: \"Тёмкинский\"\r\n    }\r\n  ] \r\n};\r\n\r\nexport const createIdToNameMap = () => {\r\n  const idToName = {};\r\n  const {outlines} = regionData;\r\n\r\n  outlines.forEach((item) => {\r\n    idToName[item.id] = item.name;\r\n  });\r\n\r\n  return idToName;\r\n};\r\n\r\nexport const createIdToStatusMap = () => {\r\n  const idToStatus = {};\r\n  const {outlines} = regionData;\r\n\r\n  outlines.forEach((item) => {\r\n    idToStatus[item.id] = RegionStatus.INITIAL;\r\n  });\r\n\r\n  return idToStatus;\r\n};\r\n\r\nexport const regionIds = regionData.outlines.map((item) => item.id);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Region from '../region/region';\r\nimport './map.css';\r\n\r\nimport {regionData} from '../../data/region-data.js';\r\n\r\nconst {outlines} = regionData;\r\n\r\nconst Map = (props) => {\r\n  const {handleRegionClick, getRegionStatus} = props;\r\n\r\n  return (\r\n    <section className=\"map\">\r\n      <svg width=\"700\" height=\"700\" viewBox=\"0 0 200 200\" id=\"svg6055\">\r\n        {outlines.map((outline) => {\r\n          return <Region \r\n            key={outline.id}\r\n            id={outline.id}\r\n            onRegionClick={handleRegionClick}\r\n            getMyStatus={getRegionStatus}\r\n          >\r\n            <path d={outline.d}></path>\r\n          </Region>\r\n        })}\r\n      </svg>\r\n    </section>\r\n  ); \r\n};\r\n\r\nMap.propTypes = {\r\n  handleRegionClick: PropTypes.func,\r\n  getRegionStatus: PropTypes.func,\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './popup.css';\r\n\r\nconst Popup = (props) => {\r\n  const {children} = props;\r\n\r\n  return (\r\n    <section className=\"popup\">\r\n      <div className=\"popup__inner\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  ); \r\n};\r\n\r\nPopup.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element.isRequired,\r\n  ]),\r\n};\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.css';\r\n\r\nconst Button = (props) => {\r\n  const {children, onClick} = props;\r\n\r\n  return (\r\n    <button className=\"btn\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n  ]),\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './game-rules.css';\r\n\r\nimport Popup from '../popup/popup';\r\nimport Button from '../button/button';\r\n\r\nconst GameRules = (props) => {\r\n  const {onStartButtonClick} = props;\r\n\r\n  return (\r\n    <Popup>\r\n      <React.Fragment>\r\n        <h2 className=\"game-rules__title\">Как хорошо Вы знаете Смоленскую область?</h2>\r\n        <p className=\"game-rules__text\">Задача: найти на карте все районы Смоленской области</p>\r\n        <p className=\"game-rules__text\">Найденные с первого раза окрашиваются в <span className=\"game-rules__text--green\">зеленый</span> цвет, со второго - в <span className=\"game-rules__text--yellow\">жёлтый</span>, с третьего - в <span className=\"game-rules__text--orange\">оранжевый</span>.\r\n        </p>\r\n        <p className=\"game-rules__text\">После трех неверных попыток правильный район выделяется <span className=\"game-rules__text--crimson\">малиновым</span> цветом, а после клика по нему, становится <span className=\"game-rules__text--red\">красным</span>.\r\n        </p>\r\n        <Button onClick={onStartButtonClick}>Начать тест</Button>\r\n      </React.Fragment>\r\n    </Popup>\r\n  ); \r\n};\r\n\r\nGameRules.propTypes = {\r\n  onStartButtonClick: PropTypes.func,\r\n};\r\n\r\nexport default GameRules;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './final-message.css';\r\n\r\nimport Popup from '../popup/popup';\r\nimport Button from '../button/button';\r\n\r\nconst getReview = (score) => {\r\n  if (score === 100) {\r\n    return `Великолепный результат! Вы превосходно знаете Смоленскую область!`\r\n  }\r\n\r\n  if (score >= 90) {\r\n    return `Отличный результат! Вы хорошо знаете Смоленскую область.`\r\n  }\r\n\r\n  if (score >= 80) {\r\n    return `Вполне достойный результат. Вы неплохо знаете Смоленскую область.`\r\n  }\r\n\r\n  if (score >= 65) {\r\n    return `Средний результат. В целом Вы знаете Смоленскую область, но иногда допускаете ошибки.`\r\n  }\r\n\r\n  if (score >= 45) {\r\n    return `Слабенько. Вы плохо знаете Смоленскую область.`\r\n  } \r\n\r\n  return `Очень жаль, но Вы совсем не знаете Смоленскую область`;\r\n};\r\n\r\nconst FinalMessage = (props) => {\r\n  const {onRestartButtonClick, score} = props;\r\n  return (\r\n    <Popup>\r\n      <React.Fragment>\r\n        <h2 className=\"final-message__title\">Ваш финальный результат: {score}%</h2>\r\n        <p className=\"final-message__text\">{getReview(score)}\r\n        </p>\r\n        <Button onClick={onRestartButtonClick}>Попробовать еще раз</Button>\r\n      </React.Fragment>\r\n    </Popup>\r\n  ); \r\n};\r\n\r\nFinalMessage.propTypes = {\r\n  onRestartButtonClick: PropTypes.func,\r\n  score: PropTypes.number,\r\n};\r\n\r\nexport default FinalMessage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './question.css';\r\n\r\nimport {createIdToNameMap} from '../../data/region-data';\r\n\r\nconst idToName = createIdToNameMap();\r\n\r\nconst Question = (props) => {\r\n  const {playingRegionId} = props;\r\n\r\n  return (\r\n    <p className=\"question\">\r\n      Где находится {idToName[playingRegionId]} район?\r\n    </p>\r\n  );\r\n};\r\n\r\nQuestion.propTypes = {\r\n  playingRegionId: PropTypes.string,\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './score.css';\r\n\r\nconst Score = (props) => {\r\n  const {value} = props;\r\n  return (\r\n    <div className=\"score\">\r\n      <p className=\"score__text\">Ваш текущий результат</p>\r\n      <p>\r\n        <span className=\"score__value\">\r\n          {value}\r\n        </span>%\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nScore.propTypes = {\r\n  value: PropTypes.number,\r\n};\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Question from '../question/question';\r\nimport Score from '../score/score';\r\nimport './info.css';\r\n\r\nconst Info = (props) => {\r\n  const {playingRegionId, isGameFinished, score} = props;\r\n \r\n  return (\r\n    <section className=\"info\">\r\n      {!isGameFinished ? <Question playingRegionId={playingRegionId} /> : ``}\r\n      <Score value={score} />\r\n    </section>\r\n  );\r\n};\r\n\r\nInfo.propTypes = {\r\n  playingRegionId: PropTypes.string,\r\n  isGameFinished: PropTypes.bool,\r\n  score: PropTypes.number,\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './tooltip.css';\r\n\r\nconst Tooltip = (props) => {\r\n  const {message, coordX, coordY} = props;\r\n  return (\r\n    <div className=\"tooltip\" style={{left: coordX, top: coordY}}>\r\n      <p className=\"tooltip__text\">\r\n        {message}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nTooltip.propTypes = {\r\n  message: PropTypes.string,\r\n  coordX: PropTypes.string,\r\n  coordY: PropTypes.string,\r\n};\r\n\r\nexport default Tooltip;\r\n","import './App.css';\r\nimport Header from './components/header/header';\r\nimport Footer from './components/footer/footer';\r\nimport Map from './components/map/map';\r\nimport GameRules from './components/game-rules/game-rules';\r\nimport FinalMessage from './components/final-message/final-message';\r\nimport Info from './components/info/info';\r\nimport Tooltip from './components/tooltip/tooltip';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport {GameStatus, RegionStatus} from './const';\r\nimport {regionIds, createIdToStatusMap} from './data/region-data';\r\n\r\nconst SUCCESS_MESSAGE = `Вы угадали!`;\r\nconst MISTAKE_MESSAGE = `Нет, это не он!`;\r\nconst SHOW_MESSAGE_TIME = 500;\r\nconst TIMEOUT_BEFORE_GAME_FINISH = 600;\r\nconst PersentageForRightAnswer = {\r\n  FROM_FIRST_TIME: 4,\r\n  FROM_SECOND_TIME: 3,\r\n  FROM_THIRD_TIME: 1\r\n};\r\n\r\nlet regionsInGame = [...regionIds];\r\nlet failedTryCount = 0;\r\nconst initialRegionsStatus = createIdToStatusMap();\r\n\r\nconst getRandomRegion = () => {\r\n  const maxIndex = regionsInGame.length - 1;\r\n  const randomIndex = Math.floor(Math.random() * (maxIndex + 1));\r\n\r\n  return regionsInGame[randomIndex];\r\n};\r\n\r\nfunction App() {\r\n  const [gameStatus, setGameStatus] = useState(GameStatus.UNSTARTED);\r\n  const [regionsStatus, setRegionsStatus] = useState({...initialRegionsStatus});\r\n  const [playingRegion, setPlayingRegion] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const excludeRegionFromGame = (region) => {\r\n    regionsInGame = regionsInGame.filter((regionInGame) => regionInGame !== region);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (regionsInGame.length === 0) {\r\n      setTimeout(finishGame, TIMEOUT_BEFORE_GAME_FINISH);\r\n    }\r\n  }, [regionsStatus]);\r\n\r\n  const getRegionStatusById = (id) => {\r\n    return regionsStatus[id];\r\n  };\r\n\r\n  const startGame = () => {\r\n    setGameStatus(GameStatus.STARTED);\r\n    setPlayingRegion(getRandomRegion());\r\n  };\r\n\r\n  const finishGame = () => {\r\n    setGameStatus(GameStatus.FINISHED);\r\n  };\r\n\r\n  const showMessage = (text, coordX, coordY) => {\r\n    const x = `${coordX}px`;\r\n    const y = `${coordY}px`;\r\n\r\n    setMessage({text, x, y});\r\n \r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, SHOW_MESSAGE_TIME);\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setGameStatus(GameStatus.UNSTARTED);\r\n\r\n    regionsInGame = [...regionIds];\r\n    failedTryCount = 0;\r\n\r\n    setRegionsStatus({...initialRegionsStatus});\r\n    setPlayingRegion(null);\r\n    setMessage(null);\r\n    setScore(0);\r\n  };\r\n\r\n  const handleRegionClick = (regionId, coordX, coordY) => {\r\n    if (gameStatus !== GameStatus.STARTED) {\r\n      return;\r\n    }\r\n\r\n    const playingRegionStatus = regionsStatus[playingRegion];\r\n\r\n    if (playingRegionStatus !== RegionStatus.INITIAL && \r\n      playingRegionStatus !== RegionStatus.FAILED) {\r\n        return;\r\n      }\r\n\r\n    if (playingRegion === regionId) {\r\n      switch (failedTryCount) {\r\n        case 0: {\r\n          setRegionsStatus({...regionsStatus, [playingRegion]: RegionStatus.GUESSED_ON_FIRST_TRY});\r\n          showMessage(SUCCESS_MESSAGE, coordX, coordY);\r\n          setScore((currentScore) => {\r\n            return currentScore + PersentageForRightAnswer.FROM_FIRST_TIME;\r\n          });\r\n          break;\r\n        }\r\n        case 1: {\r\n          setRegionsStatus({...regionsStatus, [playingRegion]: RegionStatus.GUESSED_ON_SECOND_TRY});\r\n          showMessage(SUCCESS_MESSAGE, coordX, coordY);\r\n          setScore((currentScore) => {\r\n            return currentScore + PersentageForRightAnswer\r\n            .FROM_SECOND_TIME;\r\n          });\r\n          break;\r\n        }\r\n        case 2: {\r\n          setRegionsStatus({...regionsStatus, [playingRegion]: RegionStatus.GUESSED_ON_THIRD_TRY});\r\n          showMessage(SUCCESS_MESSAGE, coordX, coordY);\r\n          setScore((currentScore) => {\r\n            return currentScore + PersentageForRightAnswer.FROM_THIRD_TIME;\r\n          });\r\n          break;\r\n        }\r\n        default: {\r\n          setRegionsStatus({...regionsStatus, [playingRegion]: RegionStatus.UNGUESSED});\r\n        }\r\n      }\r\n\r\n      excludeRegionFromGame(playingRegion);\r\n      failedTryCount = 0;\r\n\r\n      if (regionsInGame.length !== 0) {\r\n        setPlayingRegion(getRandomRegion());\r\n      }\r\n      \r\n      return;\r\n    }\r\n\r\n    if (playingRegionStatus === RegionStatus.FAILED) {\r\n      return;\r\n    }\r\n\r\n    showMessage(MISTAKE_MESSAGE, coordX, coordY);\r\n    failedTryCount++;\r\n\r\n    if (failedTryCount >= 3) {\r\n      setRegionsStatus(\r\n        {...regionsStatus, [playingRegion]: RegionStatus.FAILED});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <main className=\"app__main\">\r\n        <Map handleRegionClick={handleRegionClick} getRegionStatus={getRegionStatusById} />\r\n        {gameStatus === GameStatus.UNSTARTED ?\r\n          <GameRules onStartButtonClick={startGame} /> : ``\r\n        }\r\n        {gameStatus !== GameStatus.UNSTARTED ? \r\n          <Info\r\n            playingRegionId={playingRegion}\r\n            isGameFinished={gameStatus===GameStatus.FINISHED}\r\n            score={score}\r\n          /> : ``\r\n        }\r\n        {\r\n          gameStatus === GameStatus.FINISHED ?\r\n          <FinalMessage\r\n            onRestartButtonClick={restartGame}\r\n            score={score}\r\n          ></FinalMessage> : ``\r\n        }\r\n        {message ? <Tooltip \r\n          message={message.text} \r\n          coordX={message.x} \r\n          coordY={message.y} \r\n        /> : ``}\r\n\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}